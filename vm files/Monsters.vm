function Monsters.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push constant 31
push constant 39
push constant 0
call Monster.new 3
pop this 0
push constant 5
push constant 39
push constant 24
add
push constant 0
call Monster.new 3
pop this 1
push constant 23
push constant 39
push constant 24
push constant 2
call Math.multiply 2
add
push constant 0
call Monster.new 3
pop this 2
push constant 12
push constant 39
push constant 24
push constant 3
call Math.multiply 2
add
push constant 0
not
call Monster.new 3
pop this 3
push constant 1
push constant 39
push constant 24
push constant 4
call Math.multiply 2
add
push constant 0
call Monster.new 3
pop this 4
push constant 27
push constant 39
push constant 24
push constant 5
call Math.multiply 2
add
push constant 0
not
call Monster.new 3
pop this 5
push constant 18
push constant 39
push constant 24
push constant 6
call Math.multiply 2
add
push constant 0
call Monster.new 3
pop this 6
push constant 0
push constant 39
push constant 24
push constant 7
call Math.multiply 2
add
push constant 0
not
call Monster.new 3
pop this 7
push constant 20
push constant 39
push constant 24
push constant 8
call Math.multiply 2
add
push constant 0
call Monster.new 3
pop this 8
push pointer 0
return
function Monsters.run 0
push argument 0
pop pointer 0
push this 0
call Monster.move 1
pop temp 0
push this 1
call Monster.move 1
pop temp 0
push this 2
call Monster.move 1
pop temp 0
push this 3
call Monster.move 1
pop temp 0
push this 4
call Monster.move 1
pop temp 0
push this 5
call Monster.move 1
pop temp 0
push this 6
call Monster.move 1
pop temp 0
push this 7
call Monster.move 1
pop temp 0
push this 8
call Monster.move 1
pop temp 0
push constant 0
return
function Monsters.monsterExist 0
push argument 0
pop pointer 0
push this 0
call Monster.getX 1
push argument 1
eq
push this 0
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push this 1
call Monster.getX 1
push argument 1
eq
push this 1
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push this 2
call Monster.getX 1
push argument 1
eq
push this 2
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
push this 3
call Monster.getX 1
push argument 1
eq
push this 3
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
return
label IF_FALSE3
push this 4
call Monster.getX 1
push argument 1
eq
push this 4
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
return
label IF_FALSE4
push this 5
call Monster.getX 1
push argument 1
eq
push this 5
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
push this 6
call Monster.getX 1
push argument 1
eq
push this 6
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
return
label IF_FALSE6
push this 7
call Monster.getX 1
push argument 1
eq
push this 7
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
return
label IF_FALSE7
push this 8
call Monster.getX 1
push argument 1
eq
push this 8
call Monster.getY 1
push argument 2
eq
and
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push constant 0
not
return
label IF_FALSE8
push constant 0
return
function Monsters.dispose 0
push argument 0
pop pointer 0
push this 0
call Monster.dispose 1
pop temp 0
push this 1
call Monster.dispose 1
pop temp 0
push this 2
call Monster.dispose 1
pop temp 0
push this 3
call Monster.dispose 1
pop temp 0
push this 4
call Monster.dispose 1
pop temp 0
push this 5
call Monster.dispose 1
pop temp 0
push this 6
call Monster.dispose 1
pop temp 0
push this 7
call Monster.dispose 1
pop temp 0
push this 8
call Monster.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
